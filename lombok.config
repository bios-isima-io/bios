#################### Allowed / warned / disallowed features of Lombok.

# The following Lombok stable features are allowed.
lombok.equalsAndHashCode.flagUsage = ALLOW
lombok.toString.flagUsage = ALLOW
lombok.getter.flagUsage = ALLOW
lombok.setter.flagUsage = ALLOW
lombok.data.flagUsage = ALLOW

lombok.anyConstructor.flagUsage = ALLOW
lombok.allArgsConstructor.flagUsage = ALLOW
lombok.noArgsConstructor.flagUsage = ALLOW
lombok.requiredArgsConstructor.flagUsage = ALLOW

lombok.nonNull.flagUsage = ALLOW
lombok.log.flagUsage = ALLOW
lombok.log.log4j2.flagUsage = ALLOW
lombok.log.slf4j.flagUsage = ALLOW


# The following Lombok stable features may be OK to use, depending on the context.
lombok.builder.flagUsage = WARNING
lombok.getter.lazy.flagUsage = WARNING
lombok.value.flagUsage = WARNING


# The following Lombok stable features look dangerous, do not allow.
lombok.cleanup.flagUsage = ERROR
lombok.sneakyThrows.flagUsage = ERROR
lombok.synchronized.flagUsage = ERROR


# We don't want to allow the following Lombok stable features by choice.
lombok.val.flagUsage = ERROR
lombok.var.flagUsage = ERROR
lombok.with.flagUsage = ERROR

lombok.log.apacheCommons.flagUsage = ERROR
lombok.log.custom.flagUsage = ERROR
lombok.log.flogger.flagUsage = ERROR
lombok.log.javaUtilLogging.flagUsage = ERROR
lombok.log.jbosslog.flagUsage = ERROR
lombok.log.log4j.flagUsage = ERROR
lombok.log.xslf4j.flagUsage = ERROR


# Do not allow most Lombok experimental features.
lombok.experimental.flagUsage = WARNING

lombok.delegate.flagUsage = ERROR
lombok.extensionMethod.flagUsage = ERROR
lombok.fieldDefaults.flagUsage = ERROR
lombok.fieldNameConstants.flagUsage = ERROR
lombok.helper.flagUsage = ERROR
lombok.jacksonized.flagUsage = ERROR
lombok.onX.flagUsage = ERROR
lombok.superBuilder.flagUsage = ERROR
lombok.utilityClass.flagUsage = ERROR
lombok.withBy.flagUsage = ERROR


# EXCEPTIONS: The following Lombok experimental features seem OK to use.
lombok.accessors.flagUsage = ALLOW




#################### Important configuration options.

## Tell the configuration system it should stop looking for other configuration files
# (default: false).
# config.stopBubbling = [false | true]
config.stopBubbling = true


## Use this name for the generated logger fields (default: 'log').
# lombok.log.fieldName = <javaIdentifier>
lombok.log.fieldName = logger




#################### Low priority configuration options, or those we are not sure about.

## Generate @javax.annotation.Generated on all generated code (default: false).
# lombok.addJavaxGeneratedAnnotation = [false | true]
lombok.addJavaxGeneratedAnnotation = false


## Generate @java.lang.SuppressWarnings("all") on all generated code (default: true).
# lombok.addSuppressWarnings = [false | true]
lombok.addSuppressWarnings = false




#################### The following configuration options may be of interest to us in the future.
# For now, using the default configuration.

## Don't call the getters but use the fields directly in the generated equals and hashCode method
# (default = false).
# lombok.equalsAndHashCode.doNotUseGetters = [false | true]


## Don't call the getters but use the fields directly in the generated toString method
# (default = false).
# lombok.toString.doNotUseGetters = [false | true]


## Generate some style of null annotation for generated code where this is relevant.
# (default: none).
# lombok.addNullAnnotations = none | javax | eclipse | jetbrains | netbeans | androidx |
# android.support | checkerframework | findbugs | spring | jml |
# CUSTOM:com.foo.my.nonnull.annotation:com.foo.my.nullable.annotation


## If set with the version of checkerframework.org (in major.minor, or just 'true' for the
# latest supported version), create relevant checkerframework.org annotations for code
# lombok generates (default: false).
# checkerframework = major.minor (example: 3.2 - and no higher than 4.0) or true or false


## When generating equals and hashCode for classes that extend something (other than Object),
# either automatically take into account superclass implementation (call), or don't (skip),
# or warn and don't (warn). (default = warn).
# lombok.equalsAndHashCode.callSuper = [CALL | SKIP | WARN]


## When generating toString for classes that extend something (other than Object), either
# automatically take into account superclass implementation (call), or don't (skip), or warn and
# don't (warn). (default = warn).
# lombok.toString.callSuper = [CALL | SKIP | WARN]
