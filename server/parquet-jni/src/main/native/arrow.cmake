list(APPEND LIBARROW_CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${THIRD_PARTY_DIR})
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_PARQUET:STRING=ON)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_USE_OPENSSL:STRING=OFF)
list(APPEND LIBARROW_CMAKE_ARGS -DPARQUET_REQUIRE_ENCRYPTION:STRING=OFF)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_DEPENDENCY_SOURCE:STRING=BUNDLED)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_BUILD_SHARED:STRING=OFF)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_BUILD_STATIC:STRING=ON)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_DEPENDENCY_USE_SHARED:STRING=OFF)
list(APPEND LIBARROW_CMAKE_ARGS -DARROW_JEMALLOC:STRING=OFF)

if(CMAKE_BUILD_TYPE)
  list(APPEND LIBARROW_CMAKE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE})
endif()

if(NOT EXISTS "${THIRD_PARTY_DIR}/lib/libarrow.a")
  message("-- libarrow is going to be built")
  ExternalProject_Add(
    arrow
    GIT_REPOSITORY https://github.com/apache/arrow.git
    GIT_TAG apache-arrow-9.0.0
    PREFIX ${THIRD_PARTY_DIR}
    CMAKE_CACHE_ARGS ${LIBARROW_CMAKE_ARGS}
    LOG_DOWNLOAD TRUE
    LOG_OUTPUT_ON_FAILURE TRUE
    SOURCE_SUBDIR cpp)
  list(APPEND THIRD_PARTY arrow)
endif()
